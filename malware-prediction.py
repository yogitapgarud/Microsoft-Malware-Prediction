from __future__ import print_function

import math
import csv
from IPython import display
from matplotlib import cm
from matplotlib import gridspec
from matplotlib import pyplot as plt
import numpy as np
import pandas as pd
from sklearn import metrics
import tensorflow as tf
from tensorflow.python.data import Dataset

#tf.logging.set_verbosity(tf.logging.ERROR)
pd.options.display.max_rows = 10
pd.options.display.float_format = '{:.1f}'.format

#Load Dataset
machine_info = pd.read_csv("/home/b/Downloads/microsoft-malware-prediction/train.csv")
print(machine_info.head())
#machine_info.describe()
#print(machine_info.dtypes)

unique_vals = {}

for col in machine_info:
    unique_vals[col] = machine_info[col].unique()
    #print(unique_vals[col])

#unique_df = pd.DataFrame.from_dict(data=unique_vals, orient='index')
#unique_df.to_csv('dict_file.csv', header=False)

machine_info = machine_info.reindex(np.random.permutation(machine_info.index))

#Define input Feature
myFeatures = machine_info[["Census_FirmwareManufacturerIdentifier"]]

#Configure a numeric feature column for EngineVersion.
feature_columns = [tf.feature_column.numeric_column("Census_FirmwareManufacturerIdentifier")]

#Define the Label
targets = machine_info["HasDetections"]
